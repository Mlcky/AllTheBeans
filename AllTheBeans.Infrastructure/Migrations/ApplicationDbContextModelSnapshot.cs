// <auto-generated />
using System;
using AllTheBeans.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AllTheBeans.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("AllTheBeans.Core.Models.BeanOfTheDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoffeeBeanId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeBeanId");

                    b.ToTable("BeanOfTheDays");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.CoffeeBean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColourId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColourId");

                    b.HasIndex("CountryId");

                    b.ToTable("CoffeeBeans");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colours");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.BeanOfTheDay", b =>
                {
                    b.HasOne("AllTheBeans.Core.Models.CoffeeBean", "CoffeeBean")
                        .WithMany()
                        .HasForeignKey("CoffeeBeanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeBean");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.CoffeeBean", b =>
                {
                    b.HasOne("AllTheBeans.Core.Models.Colour", "Colour")
                        .WithMany("CoffeeBeans")
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AllTheBeans.Core.Models.Country", "Country")
                        .WithMany("CoffeeBeans")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colour");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.Colour", b =>
                {
                    b.Navigation("CoffeeBeans");
                });

            modelBuilder.Entity("AllTheBeans.Core.Models.Country", b =>
                {
                    b.Navigation("CoffeeBeans");
                });
#pragma warning restore 612, 618
        }
    }
}
